<!DOCTYPE html>
<!-- Coding By CodingNepal - youtube.com/codingnepal -->
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
    <title></title>
    <link rel="stylesheet" href="./css/space.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Iconscout Link For Icons -->
    <link
      rel="stylesheet"
      href="https://unicons.iconscout.com/release/v4.0.0/css/line.css"
    />
  </head>
  <body>

    <div class="container">

      <div class="navbar">
        <ul>
          <li><a  href="/home">Home</a></li>
          <li><a class="active" style="color:#9B59B6" href="/space">Spaces</a></li>
          <li><a href="/todo">Todos</a></li>
          <li><a  onClick="location.replace('/profile?email='+localStorage.getItem('email'))" >Profile</a></li>
          <li style="float:right"><a onclick="localStorage.clear()" href="/login">Logout</a></li>
        </ul>
        </div>

 
    <div class="popup-box">
      <div class="popup">
        <div class="content">
          <header>
            <p></p>
            <i class="uil uil-times"></i>
          </header>
          <form action="/createSpace" method="post">
            <div class="row description">
              <label>Description</label>
              <textarea spellcheck="false" name="spaceText" required></textarea>
            </div>
            <button></button>
          </form>
        </div>
      </div>
    </div>
    <div class="wrapper">
      <li class="add-box">
        <div class="icon"><i class="uil uil-plus"></i></div>
        <p>Add New Space</p>
      </li>
    </div>
    
    </div>
    


    <script>

if( localStorage.getItem("email") == null || localStorage.getItem("email") == undefined || localStorage.getItem("email") == ""){
    location.replace('/login');  
  }


      const addBox = document.querySelector(".add-box"),
        popupBox = document.querySelector(".popup-box"),
        popupTitle = popupBox.querySelector("header p"),
        closeIcon = popupBox.querySelector("header i"),
        descTag = popupBox.querySelector("textarea"),
        addBtn = popupBox.querySelector("button");

      const months = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ];
      // const spaces = JSON.parse(localStorage.getItem("spaces") || "[]");
      let spaces = '<%- spaces %>';
      spaces = JSON.parse(spaces);


      let isUpdate = false,
        updateId;

      addBox.addEventListener("click", () => {
        popupTitle.innerText = "Add a New Space";
        addBtn.innerText = "Add Space";
        popupBox.classList.add("show");
        document.querySelector("body").style.overflow = "hidden";
      });

      closeIcon.addEventListener("click", () => {
        isUpdate = false;
        descTag.value = "";
        popupBox.classList.remove("show");
        document.querySelector("body").style.overflow = "auto";
      });

      function showSpaces() {
        if (!spaces) return;
        document.querySelectorAll(".space").forEach((li) => li.remove());
        spaces.forEach((space, id) => {
          let filterDesc = space.spaceText.replaceAll("\n", "<br/>");
          let liTag = `<li class="space"  >
                        <div class="details" onclick="location.replace('/note?spaceId=${space.spaceId}')">
                            <p>Space No: ${space.spaceId}</p>
                            <span>${filterDesc}</span>
                        </div>
                        <div class="bottom-content">
                            <span>${space.date}</span>
                            <div class="settings">
                                <i onclick="showMenu(this)" class="uil uil-ellipsis-h"></i>
                                <ul class="menu">
                                    <li onclick="updateSpace(${space.spaceId}, '${filterDesc}')"><i class="uil uil-pen"></i>Edit</li>
                                    <li onclick="deleteSpace(${space.spaceId})"><i class="uil uil-trash"></i>Delete</li>
                                </ul>
                            </div>
                        </div>
                    </li>`;
          addBox.insertAdjacentHTML("afterend", liTag);
        });
      }
      showSpaces();

      function showMenu(elem) {
        elem.parentElement.classList.add("show");
        document.addEventListener("click", (e) => {
          if (e.target.tagName != "I" || e.target != elem) {
            elem.parentElement.classList.remove("show");
          }
        });
      }

      function deleteSpace(spaceId) {
        let confirmDel = confirm("Are you sure you want to delete this Space?");
        if (!confirmDel) return;

        fetch("/deleteSpace", {
          method: "POST",
          headers: {
            accept: "application.json",
            "Content-Type": "application/json",
          },
          body: JSON.stringify({spaceId: spaceId }),
        })
          .then((data) => {
            console.log(data);
          })
          .catch((err) => {
            console.log(err);
          });

        spaces = spaces.filter((space) => {

          if (space.spaceId != spaceId) {
            return space;
          }
        });
       
        showSpaces();
      }

      function updateSpace(spaceId, filterDesc) {
        let description = filterDesc.replaceAll("<br/>", "\r\n");
        updateId = spaceId;
        isUpdate = true;
        addBox.click();
        descTag.value = description;

        popupTitle.innerText = "Update a space";
        addBtn.innerText = "Update space";

      }

      addBtn.addEventListener("click", (e) => {
        e.preventDefault();
        let spaceText = descTag.value.trim();

        if (spaceText) {
          let currentDate = new Date(),
            month = months[currentDate.getMonth()],
            day = currentDate.getDate(),
            year = currentDate.getFullYear();

          if (isUpdate) {
            let spaceInfo = {
              spaceText,
              date: `${month} ${day}, ${year}`,
              spaceId: updateId,
            };

            isUpdate = false;
            spaces = spaces.map(space=>{
              if( space.spaceId == updateId ){
               return spaceInfo;
              }else{
                return space;
              }
            })

            fetch("/updateSpace", {
              method: "POST",
              headers: {
                accept: "application.json",
                "Content-Type": "application/json",
              },
              body: JSON.stringify(spaceInfo),
            })
              .then((data) => {})
              .catch((err) => {
                console.log(err);
            });
    
          } else {
            let spaceInfo = {
              spaceText,
              date: `${month} ${day}, ${year}`,
              spaceId: Math.floor(Math.random() * 1000)
            };
            spaces.push(spaceInfo);
            fetch("/createSpace", {
              method: "POST",
              headers: {
                accept: "application.json",
                "Content-Type": "application/json",
              },
              body: JSON.stringify(spaceInfo),
            })
              .then((data) => {})
              .catch((err) => {
                console.log(err);
              });
            
          }

          showSpaces();
          closeIcon.click();
        }
      });   

    </script>

    <!-- <script src="./js/spaces.js"></script> -->
  </body>
</html>
